name: test config

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  CONFIG_FILE: x86_64.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Check Server Performance
      run: |
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo "CPU核心数量: $(nproc)"
        echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息:"
        echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc $AGENT_TOOLSDIRECTORY
        sudo docker image prune --all --force
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -qq update
        sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo -E systemctl daemon-reload
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Combine Disks
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024

    - name: Checkout
      uses: actions/checkout@main

    - name: Clone source code
      run: |
        pwd
        sudo mkdir -p workdir
        sudo chown $USER:$GROUPS workdir
        cd workdir
        pwd
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf workdir/openwrt $GITHUB_WORKSPACE/openwrt
        ls -al

    - name: Load custom feeds
      run: |
        pwd
        ls -al
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        echo "openwrt目录"
        ls -al
        make defconfig
        echo "defconfig后目录"
        ls -al
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/'
        cat .config
        cp .config test.config
        echo "cp之后目录"
        ls -al

    - name: Upload config
      uses: actions/upload-artifact@main
      with:
        name: config
        path: openwrt/test.config
